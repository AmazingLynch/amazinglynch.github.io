{"componentChunkName":"component---src-templates-blog-post-js","path":"/vue3-renderer/","result":{"data":{"site":{"siteMetadata":{"title":"Colgin's Blog"}},"markdownRemark":{"id":"466cbbd2-e36f-5bed-8919-d41e5d82ca2f","excerpt":"vue2的代码中将vdom渲染成dom的方法封装在内部，如果要将vue渲染到其他一些平台，从代码组织上就很啰嗦。比如mp-vue就是直接从fork了一份vue的代码，然后修改渲染vdom的那部分代码。比如weex因为和vue有合作，所以代码是直接放在vue里的platform目录下。而vue3则彻底将运行时和将vdom…","html":"<p>vue2的代码中将vdom渲染成dom的方法封装在内部，如果要将vue渲染到其他一些平台，从代码组织上就很啰嗦。比如<a href=\"https://github.com/Meituan-Dianping/mpvue\">mp-vue</a>就是直接从fork了一份vue的代码，然后修改渲染vdom的那部分代码。比如weex因为和vue有合作，所以代码是直接放在vue里的<a href=\"https://github.com/vuejs/vue/tree/dev/src/platforms/weex\">platform</a>目录下。而vue3则彻底将运行时和将vdom渲染到页面上的平台相关代码进行了分离。从代码的组织上就能看出来了，runtime-core是平台无关的运行时，runtime-dom是和dom相关的api，除了vue实现的dom 平台之外，vue还将api设计成友好的可拓展的方式，可以让开发者自定义渲染器。所以本文将从源码解析vue 关于渲染器部分的api设计与实现。</p>\n<!--more-->\n<p>首先来看下，如何在web页面上渲染一个app</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> Counter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>Counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#counter'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">'#counter'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">h</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Counter</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>vue3的api设计也和vue2 有很大的区别</p>\n<p>vue3 引入了一个新的 概念application，通过createApp可以创建一个application，然后可以在application上可以注册这个application上全局的指令。</p>\n<p>通过源码，可以看到</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> createApp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">ensureRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">injectNativeTagCheck</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> mount <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> app\n  app<span class=\"token punctuation\">.</span>mount <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>containerOrSelector<span class=\"token operator\">:</span> Element <span class=\"token operator\">|</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\">any</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> <span class=\"token function\">normalizeContainer</span><span class=\"token punctuation\">(</span>containerOrSelector<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>container<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n    <span class=\"token keyword\">const</span> component <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span>_component\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isFunction</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>component<span class=\"token punctuation\">.</span>render <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>component<span class=\"token punctuation\">.</span>template<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      component<span class=\"token punctuation\">.</span>template <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span>innerHTML\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// clear content before mounting</span>\n    container<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v-cloak'</span><span class=\"token punctuation\">)</span>\n    container<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-v-app'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> proxy\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> app\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> CreateAppFunction<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Element</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>这里通过调用ensureRenderer() 返回一个渲染器，然后调用渲染器的createApp方法得到app，然后重写app的mount方法。</p>\n<p>所以在vue里渲染器是什么呢？可以看看ensureRender()函数</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// lazy create the renderer - this makes core renderer logic tree-shakable</span>\n<span class=\"token comment\">// in case the user only imports reactivity utilities from Vue.</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">renderer</span><span class=\"token operator\">:</span> Renderer<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Element</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> | HydrationRenderer\n\nfunction ensureRenderer() </span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> renderer <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>renderer <span class=\"token operator\">=</span> createRenderer<span class=\"token operator\">&lt;</span>Node<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>rendererOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\nconst rendererOptions = extend(</span><span class=\"token punctuation\">{</span> patchProp<span class=\"token punctuation\">,</span> forcePatchProp <span class=\"token punctuation\">}</span><span class=\"token plain-text\">, nodeOps)</span></code></pre></div>\n<p>这里的渲染器就是通过createRenderer函数创建的，传递的参数 是 一些操作dom的方法，比如nodeOps</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> nodeOps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createComment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">setElementText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">parentNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">nextSibling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">setScopeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">insertStaticContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>都是一些常规的操作dom的方法。</p>\n<p>再看下createRenderer的实现，在runtime-core包里面</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> createRenderer<span class=\"token operator\">&lt;</span>\n  HostNode <span class=\"token operator\">=</span> RendererNode<span class=\"token punctuation\">,</span>\n  HostElement <span class=\"token operator\">=</span> RendererElement\n<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> RendererOptions<span class=\"token operator\">&lt;</span>HostNode<span class=\"token punctuation\">,</span> HostElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> baseCreateRenderer<span class=\"token operator\">&lt;</span>HostNode<span class=\"token punctuation\">,</span> HostElement<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>createRenderer函数是被导出的，可以提供给开发者使用。这也是我们自定义渲染器需要使用的方法。接下来看下baseCreateRenderer的实现</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">baseCreateRender</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token punctuation\">,</span> createHydrationFns</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">insert</span><span class=\"token operator\">:</span> hostInsert<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">remove</span><span class=\"token operator\">:</span> hostRemove<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">patchProp</span><span class=\"token operator\">:</span> hostPatchProp<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">forcePatchProp</span><span class=\"token operator\">:</span> hostForcePatchProp<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">createElement</span><span class=\"token operator\">:</span> hostCreateElement<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">createText</span><span class=\"token operator\">:</span> hostCreateText<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">createComment</span><span class=\"token operator\">:</span> hostCreateComment<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">setText</span><span class=\"token operator\">:</span> hostSetText<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">setElementText</span><span class=\"token operator\">:</span> hostSetElementText<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">parentNode</span><span class=\"token operator\">:</span> hostParentNode<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">nextSibling</span><span class=\"token operator\">:</span> hostNextSibling<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">setScopeId</span><span class=\"token operator\">:</span> hostSetScopeId <span class=\"token operator\">=</span> <span class=\"token constant\">NOOP</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">cloneNode</span><span class=\"token operator\">:</span> hostCloneNode<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">insertStaticContent</span><span class=\"token operator\">:</span> hostInsertStaticContent\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n    <span class=\"token comment\">// ...</span>\n    \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vnode<span class=\"token punctuation\">,</span> contianer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> <span class=\"token literal-property property\">hydrate</span><span class=\"token operator\">:</span> ReturnType<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeof</span> <span class=\"token attr-name\">createHydrationFunctions</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">[0] | undefined\n  let hydrateNode: ReturnType</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeof</span> <span class=\"token attr-name\">createHydrationFunctions</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">[1] | undefined\n  if (createHydrationFns) </span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span>hydrate<span class=\"token punctuation\">,</span> hydrateNode<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">createHydrationFns</span><span class=\"token punctuation\">(</span>internals <span class=\"token keyword\">as</span> RendererInternals<span class=\"token operator\">&lt;</span>\n      Node<span class=\"token punctuation\">,</span>\n      Element\n    <span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\n    return </span><span class=\"token punctuation\">{</span>\n        render<span class=\"token punctuation\">,</span>\n        hydrate<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">createApp</span><span class=\"token operator\">:</span> <span class=\"token function\">createAppAPI</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">,</span> hydrate<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n}</span></code></pre></div>\n<p>这里可以看到，baseCreateRenderer 函数没有导出，这是因为这是通用的渲染器定义，在这个函数 返回了三个方法</p>\n<ul>\n<li>render: 将vnode渲染到指定容器中</li>\n<li>hydrate: ssr相关</li>\n<li>createApp: 创建应用</li>\n</ul>\n<p>在这个函数中，从options对象中取出操作dom的那些方法，然后得到一个render 函数，这个render 函数作用就是将vnode 渲染到指定的节点上，这其中就会利用options传过来的那些原生dom方法。</p>\n<p>可以看到一个渲染器包含了 render,hydrate,createApp三个部分。</p>\n<p>我们再看下createApp的实现</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> createAppAPI<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HostElement</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">(\n  render: RootRenderFunction,\n  hydrate?: RootHydrateFunction\n): CreateAppFunction</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HostElement</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rootComponent<span class=\"token punctuation\">,</span> rootProps <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rootProps <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isObject</span><span class=\"token punctuation\">(</span>rootProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      __DEV__ <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">root props passed to app.mount() must be an object.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      rootProps <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> <span class=\"token function\">createAppContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> installedPlugins <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">let</span> isMounted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">app</span><span class=\"token operator\">:</span> App <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">_uid</span><span class=\"token operator\">:</span> uid<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">_component</span><span class=\"token operator\">:</span> rootComponent <span class=\"token keyword\">as</span> ConcreteComponent<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">_props</span><span class=\"token operator\">:</span> rootProps<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">_container</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">_context</span><span class=\"token operator\">:</span> context<span class=\"token punctuation\">,</span>\n\n      version<span class=\"token punctuation\">,</span>\n\n      <span class=\"token keyword\">get</span> <span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">.</span>config\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token keyword\">set</span> <span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">app.config cannot be replaced. Modify individual options instead.</span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">plugin</span><span class=\"token operator\">:</span> Plugin<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>options<span class=\"token operator\">:</span> any<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>installedPlugins<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          __DEV__ <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Plugin has already been applied to target app.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>plugin <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isFunction</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">.</span>install<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          installedPlugins<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">)</span>\n          plugin<span class=\"token punctuation\">.</span><span class=\"token function\">install</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>options<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isFunction</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          installedPlugins<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">)</span>\n          <span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>options<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">A plugin must either be a function or an object with an \"install\" </span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n              <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">function.</span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> app\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">mixin</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">mixin</span><span class=\"token operator\">:</span> ComponentOptions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__FEATURE_OPTIONS_API__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>context<span class=\"token punctuation\">.</span>mixins<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>mixin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            context<span class=\"token punctuation\">.</span>mixins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>mixin<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// global mixin with props/emits de-optimizes props/emits</span>\n            <span class=\"token comment\">// normalization caching.</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mixin<span class=\"token punctuation\">.</span>props <span class=\"token operator\">||</span> mixin<span class=\"token punctuation\">.</span>emits<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              context<span class=\"token punctuation\">.</span>deopt <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>\n              <span class=\"token string\">'Mixin has already been applied to target app'</span> <span class=\"token operator\">+</span>\n                <span class=\"token punctuation\">(</span>mixin<span class=\"token punctuation\">.</span>name <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>mixin<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mixins are only available in builds supporting Options API'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> app\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">component</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> component<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Component<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> any <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">validateComponentName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>component<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">.</span>components<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__ <span class=\"token operator\">&amp;&amp;</span> context<span class=\"token punctuation\">.</span>components<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Component \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" has already been registered in target app.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        context<span class=\"token punctuation\">.</span>components<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> component\n        <span class=\"token keyword\">return</span> app\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> directive<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Directive</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">validateDirectiveName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>directive<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">.</span>directives<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> any\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__ <span class=\"token operator\">&amp;&amp;</span> context<span class=\"token punctuation\">.</span>directives<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Directive \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" has already been registered in target app.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        context<span class=\"token punctuation\">.</span>directives<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> directive\n        <span class=\"token keyword\">return</span> app\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>rootContainer<span class=\"token operator\">:</span> HostElement<span class=\"token punctuation\">,</span> isHydrate<span class=\"token operator\">?</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> any <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isMounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> vnode <span class=\"token operator\">=</span> <span class=\"token function\">createVNode</span><span class=\"token punctuation\">(</span>\n            rootComponent <span class=\"token keyword\">as</span> ConcreteComponent<span class=\"token punctuation\">,</span>\n            rootProps\n          <span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">// store app context on the root VNode.</span>\n          <span class=\"token comment\">// this will be set on the root instance on initial mount.</span>\n          vnode<span class=\"token punctuation\">.</span>appContext <span class=\"token operator\">=</span> context\n\n          <span class=\"token comment\">// HMR root reload</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            context<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">reload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">cloneVNode</span><span class=\"token punctuation\">(</span>vnode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rootContainer<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isHydrate <span class=\"token operator\">&amp;&amp;</span> hydrate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">hydrate</span><span class=\"token punctuation\">(</span>vnode <span class=\"token keyword\">as</span> VNode<span class=\"token operator\">&lt;</span>Node<span class=\"token punctuation\">,</span> Element<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> rootContainer <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>vnode<span class=\"token punctuation\">,</span> rootContainer<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n          isMounted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n          app<span class=\"token punctuation\">.</span>_container <span class=\"token operator\">=</span> rootContainer\n          <span class=\"token comment\">// for devtools and telemetry</span>\n          <span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span>rootContainer <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__vue_app__ <span class=\"token operator\">=</span> app\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__ <span class=\"token operator\">||</span> __FEATURE_PROD_DEVTOOLS__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">devtoolsInitApp</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> version<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">return</span> vnode<span class=\"token punctuation\">.</span>component<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>proxy\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">App has already been mounted.\\n</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n              <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">If you want to remount the same app, move your app creation logic </span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n              <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">into a factory function and create fresh app instances for each </span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n              <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">mount - e.g. \\`const createMyApp = () => createApp(App)\\`</span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">unmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">.</span>_container<span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__ <span class=\"token operator\">||</span> __FEATURE_PROD_DEVTOOLS__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">devtoolsUnmountApp</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Cannot unmount an app that is not mounted.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__DEV__ <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>key <span class=\"token keyword\">as</span> string <span class=\"token operator\">|</span> symbol<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> context<span class=\"token punctuation\">.</span>provides<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">App already provides property with key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\". </span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n              <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">It will be overwritten with the new value.</span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// TypeScript doesn't allow symbols as index type</span>\n        <span class=\"token comment\">// https://github.com/Microsoft/TypeScript/issues/24587</span>\n        context<span class=\"token punctuation\">.</span>provides<span class=\"token punctuation\">[</span>key <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n\n        <span class=\"token keyword\">return</span> app\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> app\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>前面我们说到 vue3 与vue2有一个很大的区别在于，vue3引入了application的概念，在createAppAPI这里可以看到，返回的app就是一个application对象，这个对象实现了 集成注册插件，注册指令，注册组件等方法，实现都很简单，就是将这些资源的注册到app 的context中而不是像vue3那样注册到全局Vue中。</p>\n<p>这个createAppAPI 里有一个mount方法 就是将application 挂载到某一个dom节点上，实现上就是利用之前的render 方法。</p>\n<p>看到这里，或许你对vue3渲染器的API设计与实现已经有一部分了解了。接下来说一些有意思的点。</p>\n<ol>\n<li>render方法</li>\n</ol>\n<p>在runtime-dom中 对渲染器的render方法是暴露给了开发者的。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// use explicit type casts here to avoid import() calls in rolled-up d.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> render <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">ensureRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> RootRenderFunction<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Element</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>而这个render方法 的实现就是 渲染器里面的render方法，作用就是将vdom渲染到固定容器中。也就是说如下代码也是可以渲染出来的。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> h <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>而实际使用过程，我们大都使用createApp创建一个application这种方式，原因是这种方式更加符合vue3的设计，将资源注册到application 会让代码更加模块化。</p>\n<p>render方法在测试中会有很多应用</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStaticVNode<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../src'</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'static vnode handling'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div>hello&lt;/div>&lt;p>world&lt;/p></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token keyword\">const</span> content2 <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;p>foo&lt;/p>&lt;div>bar&lt;/div>&lt;span>baz&lt;/span></span><span class=\"token template-punctuation string\">`</span></span>\n\n  <span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> <span class=\"token function\">createStaticVNode</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> s2 <span class=\"token operator\">=</span> <span class=\"token function\">createStaticVNode</span><span class=\"token punctuation\">(</span>content2<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should mount from string'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>content<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li>如何实现一个渲染器</li>\n</ol>\n<p>根据vue 的api设计，我们只需要传入一组 操作原生 内容的api，就可以得到一个针对特定平台的渲染器</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createRenderer<span class=\"token punctuation\">,</span> h <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token comment\">// 参考runtime-dom/src/nodeOps.ts</span>\n<span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createComment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">setElementText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">parentNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">nextSibling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">setScopeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">insertStaticContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">patchProp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">forcePatchProp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> myRenderer\n<span class=\"token keyword\">function</span> <span class=\"token function\">ensureMyRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> myRenderer <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>myRenderer <span class=\"token operator\">=</span> <span class=\"token function\">createRenderer</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createMyRendererApp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">ensureMyRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 重写mount</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> mount <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> app\n    app<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">mount</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">containerOrSelector</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ..</span>\n        <span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> <span class=\"token function\">mount</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> proxy\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">createMyRendererApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"vue3 中渲染器api的设计","date":"November 14, 2020","description":"良好的API设计是将vue接入各种平台的基础"}},"previous":{"fields":{"slug":"/chunkhash-contenthash-in-webpack/"},"frontmatter":{"title":"webpack 中的contenthash与chunkhash"}},"next":{"fields":{"slug":"/css-in-js-introduction/"},"frontmatter":{"title":"css-in-js 介绍"}}},"pageContext":{"id":"466cbbd2-e36f-5bed-8919-d41e5d82ca2f","previousPostId":"696bcfad-93ab-54b1-b08e-a73c77c8d2e3","nextPostId":"9a812952-3766-57e5-bdae-6c1b1e877d9a"}},"staticQueryHashes":["2841359383","965855181"]}