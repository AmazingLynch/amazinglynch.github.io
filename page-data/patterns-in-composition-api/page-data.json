{"componentChunkName":"component---src-templates-blog-post-js","path":"/patterns-in-composition-api/","result":{"data":{"site":{"siteMetadata":{"title":"Colgin's Blog"}},"markdownRemark":{"id":"2f028ecb-d072-5f78-ac51-e547e6dc3190","excerpt":"看了下vueuse的实现，开拓了一下视野，不仅仅是学习到了composition api封装的模式，更有代码组织上的学问。 前提 首先我们需要思考的composition api和普通的函数有什么区别。区别在于在composition api…","html":"<p>看了下vueuse的实现，开拓了一下视野，不仅仅是学习到了composition api封装的模式，更有代码组织上的学问。<!--more --></p>\n<h2>前提</h2>\n<p>首先我们需要思考的composition api和普通的函数有什么区别。区别在于在composition api中可以是响应式，所谓的响应式，最主要的特征是“变”，是变量的值跟着变；还是你修改变量的值，别的地方会跟着变。这是不同的思路。</p>\n<h2>常见的模式</h2>\n<h3>状态 + 事件</h3>\n<p>通过全局状态或者一些全局api 获取到初始状态（当然也有可能是通过函数参数将初始状态传入），根据初始状态创建 <code class=\"language-text\">Ref</code>, 然后通过事件监听状态的变化，在状态变化时修改 <code class=\"language-text\">Ref</code> 的值。如果要将 响应式状态返回的话，还需要监听 响应式状态值的变化，变化之后，将值写到全局状态。</p>\n<h4>固定参数，结果是浏览器依据环境变化的</h4>\n<p>也就是说往往是可读不可写的（readonly），那有人就要问了，不可写你直接读取它不就行了，为啥还需要响应式呢？原因在于这种状态虽然不可写，但是由于外界环境的变化，会自动发生变化。比如 <code class=\"language-text\">useMediaQuery</code>的结果就和显示区域大小有关。</p>\n<p>比如<code class=\"language-text\">useMediaQuery</code> 就是利用了<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/matchMedia\">matchMedia</a> api 实现了从全局获取数据，以及监听变化的功能。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Reactive Media Query.\n *\n * @link https://vueuse.org/useMediaQuery\n * @param query\n * @param options\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span>query<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">:</span> ConfigurableWindow <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> window <span class=\"token operator\">=</span> defaultWindow <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> mediaQuery <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> matches <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span>mediaQuery<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> MediaQueryListEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    matches<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>matches\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'addEventListener'</span> <span class=\"token keyword\">in</span> mediaQuery<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mediaQuery<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// @ts-expect-error - fallback for Safari &lt; 14 and older browsers</span>\n    mediaQuery<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">tryOnUnmounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'removeEventListener'</span> <span class=\"token keyword\">in</span> mediaQuery<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      mediaQuery<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// @ts-expect-error - fallback for Safari &lt; 14 and older browsers</span>\n      mediaQuery<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> matches\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>使用时</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> isLargeScreen <span class=\"token operator\">=</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(min-width: 1024px)'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>除了 <code class=\"language-text\">useMediaQuery</code>, 还有许多</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>初始值</th>\n<th>事件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>useMediaQuery</td>\n<td>window.matchMedia</td>\n<td>window的blur和focus事件</td>\n</tr>\n<tr>\n<td>useBattery</td>\n<td>navigator.getBattery()</td>\n<td>Battery 的 ‘chargingchange’, ‘chargingtimechange’, ‘dischargingtimechange’</td>\n</tr>\n<tr>\n<td>usePermission</td>\n<td>navigator.permissions</td>\n<td>navigator.permissions 返回的status 的change事件</td>\n</tr>\n<tr>\n<td>usePerferredLanguages</td>\n<td>navigator.languages</td>\n<td>Window的 languagechange事件</td>\n</tr>\n<tr>\n<td>useDeviceMotion</td>\n<td>无</td>\n<td>Window 的 devicemotion事件</td>\n</tr>\n<tr>\n<td>useDeviceOrientation</td>\n<td>无</td>\n<td>window的 deviceorientation事件</td>\n</tr>\n<tr>\n<td>useDocumentVisibility</td>\n<td>Document.visiblityState</td>\n<td>Document 的 visibilitychange事件</td>\n</tr>\n<tr>\n<td>useElementBounding</td>\n<td>无</td>\n<td>ResizeObserver</td>\n</tr>\n<tr>\n<td>useResizeObserver</td>\n<td>无</td>\n<td>Window.ResizeObserver 回调</td>\n</tr>\n<tr>\n<td>useGeolocation</td>\n<td>无</td>\n<td>Navigator.geolocation.watchPosition 回调</td>\n</tr>\n<tr>\n<td>useMouse</td>\n<td>无</td>\n<td>window的mouse move</td>\n</tr>\n<tr>\n<td>useMutationObserver</td>\n<td>无</td>\n<td>window.MutationObserver的回调</td>\n</tr>\n<tr>\n<td>useNetwork</td>\n<td>Navigator.connection</td>\n<td>window的offline,online事件，connection的change事件</td>\n</tr>\n<tr>\n<td>useWindowScroll</td>\n<td>window.pageXOffest, window.pageYOffset</td>\n<td>Window 的scroll事件</td>\n</tr>\n</tbody>\n</table>\n<p><code class=\"language-text\">useResizeObserver</code> 使用 <code class=\"language-text\">window.ResizeObserver</code>的回调更新值，也可以做到响应式</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">useResizeObserver</span><span class=\"token punctuation\">(</span>\n  target<span class=\"token operator\">:</span> MaybeElementRef<span class=\"token punctuation\">,</span>\n  callback<span class=\"token operator\">:</span> ResizeObserverCallback<span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> ResizeObserverOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> window <span class=\"token operator\">=</span> defaultWindow<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>observerOptions <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n  <span class=\"token keyword\">let</span> observer<span class=\"token operator\">:</span> ResizeObserver <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span>\n  <span class=\"token keyword\">const</span> isSupported <span class=\"token operator\">=</span> window <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'ResizeObserver'</span> <span class=\"token keyword\">in</span> window\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">cleanup</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>observer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      observer<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      observer <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> stopWatch <span class=\"token operator\">=</span> <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">unrefElement</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">cleanup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isSupported <span class=\"token operator\">&amp;&amp;</span> window <span class=\"token operator\">&amp;&amp;</span> el<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// @ts-expect-error missing type</span>\n        <span class=\"token class-name\">observer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">window</span><span class=\"token punctuation\">.</span><span class=\"token function\">ResizeObserver</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span>\n        observer<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> observerOptions<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> immediate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> flush<span class=\"token operator\">:</span> <span class=\"token string\">'post'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">stop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cleanup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">stopWatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">tryOnUnmounted</span><span class=\"token punctuation\">(</span>stop<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    isSupported<span class=\"token punctuation\">,</span>\n    stop<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这里的 <code class=\"language-text\">isSupported</code>是普通变量，因为这种不会变化。</p>\n<h4>变化的参数</h4>\n<p>浏览器不会无故变化，由外部控制变化。从实现方式上来看，可以通过 watch函数参数来监听外部变化。此处以 <code class=\"language-text\">useFavicon</code>为例。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Reactive favicon.\n *\n * @link https://vueuse.org/useFavicon\n * @param newIcon\n * @param options\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useFavicon</span><span class=\"token punctuation\">(</span>\n  newIcon<span class=\"token operator\">:</span> MaybeRef<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> FaviconOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    rel <span class=\"token operator\">=</span> <span class=\"token string\">'icon'</span><span class=\"token punctuation\">,</span>\n    document <span class=\"token operator\">=</span> defaultDocument<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n\n  <span class=\"token keyword\">const</span> favicon <span class=\"token operator\">=</span> <span class=\"token function\">isRef</span><span class=\"token punctuation\">(</span>newIcon<span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">?</span> newIcon\n    <span class=\"token operator\">:</span> <span class=\"token generic-function\"><span class=\"token function\">ref</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>newIcon<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">applyIcon</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>icon<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token operator\">?.</span>head\n      <span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">querySelectorAll</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HTMLLinkElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">link[rel*=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>rel<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>el <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>baseUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>icon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n    favicon<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isString</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">!==</span> o<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">applyIcon</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> immediate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> favicon\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>除了 <code class=\"language-text\">useFavicon</code>之外，还有 <code class=\"language-text\">useTitle</code>, <code class=\"language-text\">useCssVar</code> 也是同样的思路。</p>\n<h4>返回响应式的状态与方法</h4>\n<p>有些情况，我们需要修改状态，但是又不能简单使用第二种方式。比如 <code class=\"language-text\">useClipboard</code>, <code class=\"language-text\">useFullscreen</code>。这里以<code class=\"language-text\">useFullscreen</code> 为例，他可以控制将某个元素设置为全屏模式</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">ref</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HTMLElement <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isFullscreen<span class=\"token punctuation\">,</span> enter<span class=\"token punctuation\">,</span> exit<span class=\"token punctuation\">,</span> toggle <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useFullscreen</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span></code></pre></div>\n<p>实现上</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">FunctionMap</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'requestFullscreen'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'exitFullscreen'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'fullscreenElement'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'fullscreenEnabled'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'fullscreenchange'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'fullscreenerror'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// from: https://github.com/sindresorhus/screenfull.js/blob/master/src/screenfull.js</span>\n<span class=\"token keyword\">const</span> functionsMap<span class=\"token operator\">:</span> FunctionMap<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'requestFullscreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'exitFullscreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'fullscreenElement'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'fullscreenEnabled'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'fullscreenchange'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'fullscreenerror'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// New WebKit</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'webkitRequestFullscreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitExitFullscreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitFullscreenElement'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitFullscreenEnabled'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitfullscreenchange'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitfullscreenerror'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Old WebKit</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'webkitRequestFullScreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitCancelFullScreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitCurrentFullScreenElement'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitCancelFullScreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitfullscreenchange'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'webkitfullscreenerror'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'mozRequestFullScreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'mozCancelFullScreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'mozFullScreenElement'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'mozFullScreenEnabled'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'mozfullscreenchange'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'mozfullscreenerror'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'msRequestFullscreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'msExitFullscreen'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'msFullscreenElement'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'msFullscreenEnabled'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'MSFullscreenChange'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'MSFullscreenError'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span>\n\n<span class=\"token comment\">/**\n * Reactive Fullscreen API.\n *\n * @link https://vueuse.org/useFullscreen\n * @param target\n * @param options\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useFullscreen</span><span class=\"token punctuation\">(</span>\n  target<span class=\"token operator\">?</span><span class=\"token operator\">:</span> MaybeElementRef<span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> ConfigurableDocument <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> document <span class=\"token operator\">=</span> defaultDocument <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n  <span class=\"token keyword\">const</span> targetRef <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span>target <span class=\"token operator\">||</span> document<span class=\"token operator\">?.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> isFullscreen <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> isSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token keyword\">let</span> map<span class=\"token operator\">:</span> FunctionMap <span class=\"token operator\">=</span> functionsMap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    isSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> m <span class=\"token keyword\">of</span> functionsMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        map <span class=\"token operator\">=</span> m\n        isSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        <span class=\"token keyword\">break</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">REQUEST</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">EXIT</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">ELEMENT</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">EVENT</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> map\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isSupported<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span><span class=\"token constant\">ELEMENT</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">await</span> document<span class=\"token punctuation\">[</span><span class=\"token constant\">EXIT</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    isFullscreen<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isSupported<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">await</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>targetRef<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> targetRef<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">[</span><span class=\"token constant\">REQUEST</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      isFullscreen<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isFullscreen<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">useEventListener</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">,</span> <span class=\"token constant\">EVENT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      isFullscreen<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span><span class=\"token constant\">ELEMENT</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    isSupported<span class=\"token punctuation\">,</span>\n    isFullscreen<span class=\"token punctuation\">,</span>\n    enter<span class=\"token punctuation\">,</span>\n    exit<span class=\"token punctuation\">,</span>\n    toggle<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>可以看到返回了当前的状态，以及用来控制状态的方法。其实这种场景如果使用返回响应式变量，通过修改响应式变量的方式也可以实现 “部分功能”，比如<code class=\"language-text\">isFullscreen.value = false</code> 就将改元素退出全屏。也不是不可以，只不过这里 使用<code class=\"language-text\">enter</code>, <code class=\"language-text\">exit</code>, <code class=\"language-text\">toggle</code> 语义功能上来说会更加完整，而且，函数还可以传递参数（比如useClipboard)。还有<code class=\"language-text\">useScriptTag</code>，<code class=\"language-text\">useShare</code> 也是类似的思路。</p>\n<p>可以看下 <code class=\"language-text\">useShare</code> 是一个典型的例子，需要返回函数用来传递参数</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> share<span class=\"token punctuation\">,</span> isSupported <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">startShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">share</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span>\n    text<span class=\"token operator\">:</span> <span class=\"token string\">'Hello my friend!'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>或者</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> shareOptions <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">ref</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ShareOptions<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> share<span class=\"token punctuation\">,</span> isSupported <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useShare</span><span class=\"token punctuation\">(</span>shareOptions<span class=\"token punctuation\">)</span>\n\nshareOptions<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span>\n\n<span class=\"token function\">share</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>可以接收一个参数是一个配置对象。也可以直接往 <code class=\"language-text\">share</code>里传配置对象</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useShare</span><span class=\"token punctuation\">(</span>shareOptions<span class=\"token operator\">:</span> MaybeRef<span class=\"token operator\">&lt;</span>ShareOptions<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">:</span> ConfigurableNavigator <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> navigator <span class=\"token operator\">=</span> defaultNavigator <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n\n  <span class=\"token keyword\">const</span> _navigator <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>navigator <span class=\"token keyword\">as</span> NavigatorWithShare<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> isSupported <span class=\"token operator\">=</span> _navigator <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'canShare'</span> <span class=\"token keyword\">in</span> _navigator\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">share</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span>overrideOptions<span class=\"token operator\">:</span> MaybeRef<span class=\"token operator\">&lt;</span>ShareOptions<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isSupported<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span><span class=\"token function\">unref</span><span class=\"token punctuation\">(</span>shareOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span><span class=\"token function\">unref</span><span class=\"token punctuation\">(</span>overrideOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">let</span> granted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>files <span class=\"token operator\">&amp;&amp;</span> _navigator<span class=\"token punctuation\">.</span>canShare<span class=\"token punctuation\">)</span>\n        granted <span class=\"token operator\">=</span> _navigator<span class=\"token punctuation\">.</span><span class=\"token function\">canShare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> files<span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>files <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>granted<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> _navigator<span class=\"token punctuation\">.</span>share<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    isSupported<span class=\"token punctuation\">,</span>\n    share<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>监听事件</h4>\n<p>可以将 , domRef传入composition api中，达到事件监听。比如 <code class=\"language-text\">onClickOutisde</code>, <code class=\"language-text\">onKeyStroke</code>, <code class=\"language-text\">onStartTyping</code></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> events <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'mousedown'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'touchstart'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pointerdown'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">EventType</span> <span class=\"token operator\">=</span> WindowEventMap<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">/**\n * Listen for clicks outside of an element.\n *\n * @link https://vueuse.org/onClickOutside\n * @param target\n * @param handler\n * @param options\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">onClickOutside</span><span class=\"token punctuation\">(</span>\n  target<span class=\"token operator\">:</span> MaybeElementRef<span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>evt<span class=\"token operator\">:</span> EventType<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> ConfigurableWindow <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> window <span class=\"token operator\">=</span> defaultWindow <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">listener</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> EventType<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> <span class=\"token function\">unrefElement</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>el<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>el <span class=\"token operator\">===</span> event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">composedPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n\n    <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> disposables<span class=\"token operator\">:</span> Fn<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> events\n    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">=></span> <span class=\"token function\">useEventListener</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> passive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">stop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    disposables<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>stop <span class=\"token operator\">=></span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    disposables <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">tryOnUnmounted</span><span class=\"token punctuation\">(</span>stop<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> stop\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>onStartTyping</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isFocusedElementEditable</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> activeElement<span class=\"token punctuation\">,</span> body <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> document\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>activeElement<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token comment\">// If not element has focus, we assume it is not editable, too.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>activeElement <span class=\"token operator\">===</span> body<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token comment\">// Assume &lt;input> and &lt;textarea> elements are editable.</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>activeElement<span class=\"token punctuation\">.</span>tagName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'INPUT'</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'TEXTAREA'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Check if any other focused element id editable.</span>\n  <span class=\"token keyword\">return</span> activeElement<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'contenteditable'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isTypedCharValid</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  keyCode<span class=\"token punctuation\">,</span>\n  metaKey<span class=\"token punctuation\">,</span>\n  ctrlKey<span class=\"token punctuation\">,</span>\n  altKey<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> KeyboardEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>metaKey <span class=\"token operator\">||</span> ctrlKey <span class=\"token operator\">||</span> altKey<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token comment\">// 0...9</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>keyCode <span class=\"token operator\">>=</span> <span class=\"token number\">48</span> <span class=\"token operator\">&amp;&amp;</span> keyCode <span class=\"token operator\">&lt;=</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>keyCode <span class=\"token operator\">>=</span> <span class=\"token number\">96</span> <span class=\"token operator\">&amp;&amp;</span> keyCode <span class=\"token operator\">&lt;=</span> <span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n\n  <span class=\"token comment\">// a...z</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>keyCode <span class=\"token operator\">>=</span> <span class=\"token number\">65</span> <span class=\"token operator\">&amp;&amp;</span> keyCode <span class=\"token operator\">&lt;=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n\n  <span class=\"token comment\">// All other keys.</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Fires when users start typing on non-editable elements.\n *\n * @link https://vueuse.org/onStartTyping\n * @param callback\n * @param options\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">onStartTyping</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">callback</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> KeyboardEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">,</span> options<span class=\"token operator\">:</span> ConfigurableDocument <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> document <span class=\"token operator\">=</span> defaultDocument <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">keydown</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> KeyboardEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">!</span><span class=\"token function\">isFocusedElementEditable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isTypedCharValid</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">useEventListener</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">,</span> <span class=\"token string\">'keydown'</span><span class=\"token punctuation\">,</span> keydown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> passive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>原理都一样，监听事件，调用回调。只不过是使用composition api的方式来实现</p>\n<h4>回调</h4>\n<p>vueuse 中还有一些 <code class=\"language-text\">useRafFn</code>, <code class=\"language-text\">useTimeoutFn</code>, <code class=\"language-text\">useIntervalFn</code> 这类函数。</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useRafFn</span><span class=\"token punctuation\">(</span>fn<span class=\"token operator\">:</span> Fn<span class=\"token punctuation\">,</span> options<span class=\"token operator\">:</span> RafFnOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RafFnReturn <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    immediate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    window <span class=\"token operator\">=</span> defaultWindow<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n\n  <span class=\"token keyword\">const</span> isActive <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isActive<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isActive<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      isActive<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    isActive<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>immediate<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">tryOnUnmounted</span><span class=\"token punctuation\">(</span>pause<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    isActive<span class=\"token punctuation\">,</span>\n    pause<span class=\"token punctuation\">,</span>\n    resume<span class=\"token punctuation\">,</span>\n    stop<span class=\"token operator\">:</span> pause<span class=\"token punctuation\">,</span>\n    start<span class=\"token operator\">:</span> resume<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>其他有意思的实现</h2>\n<p><code class=\"language-text\">usePageLeave</code></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">usePageLeave</span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> ConfigurableWindow <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> window <span class=\"token operator\">=</span> defaultWindow <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n  <span class=\"token keyword\">const</span> isLeft <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> MouseEvent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n\n    event <span class=\"token operator\">=</span> event <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>event <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// @ts-ignore</span>\n    <span class=\"token keyword\">const</span> from <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>relatedTarget <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>toElement\n    isLeft<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>from\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">useEventListener</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> <span class=\"token string\">'mouseout'</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> passive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">useEventListener</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">,</span> <span class=\"token string\">'mouseleave'</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> passive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">useEventListener</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">,</span> <span class=\"token string\">'mouseenter'</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> passive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> isLeft\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>视差滚动<code class=\"language-text\">useParallax</code></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useParallax</span><span class=\"token punctuation\">(</span>\n  target<span class=\"token operator\">:</span> MaybeElementRef<span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> ParallaxOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ParallaxReturn <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">deviceOrientationTiltAdjust</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">=></span> i<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">deviceOrientationRollAdjust</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">=></span> i<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">mouseTiltAdjust</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">=></span> i<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">mouseRollAdjust</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">=></span> i<span class=\"token punctuation\">,</span>\n    window <span class=\"token operator\">=</span> defaultWindow<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options\n\n  <span class=\"token keyword\">const</span> orientation <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token function\">useDeviceOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> window <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    elementX<span class=\"token operator\">:</span> x<span class=\"token punctuation\">,</span>\n    elementY<span class=\"token operator\">:</span> y<span class=\"token punctuation\">,</span>\n    elementWidth<span class=\"token operator\">:</span> width<span class=\"token punctuation\">,</span>\n    elementHeight<span class=\"token operator\">:</span> height<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useMouseInElement</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> handleOutside<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> window <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> source <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">.</span>isSupported\n      <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">.</span>alpha <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> orientation<span class=\"token punctuation\">.</span>alpha <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">.</span>gamma <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> orientation<span class=\"token punctuation\">.</span>gamma <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'deviceOrientation'</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'mouse'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> roll <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">'deviceOrientation'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>orientation<span class=\"token punctuation\">.</span>beta<span class=\"token operator\">!</span> <span class=\"token operator\">/</span> <span class=\"token number\">90</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">deviceOrientationRollAdjust</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-</span> height<span class=\"token punctuation\">.</span>value <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> height<span class=\"token punctuation\">.</span>value\n      <span class=\"token keyword\">return</span> <span class=\"token function\">mouseRollAdjust</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> tilt <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">'deviceOrientation'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> orientation<span class=\"token punctuation\">.</span>gamma<span class=\"token operator\">!</span> <span class=\"token operator\">/</span> <span class=\"token number\">90</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">deviceOrientationTiltAdjust</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-</span> width<span class=\"token punctuation\">.</span>value <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> width<span class=\"token punctuation\">.</span>value\n      <span class=\"token keyword\">return</span> <span class=\"token function\">mouseTiltAdjust</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> roll<span class=\"token punctuation\">,</span> tilt<span class=\"token punctuation\">,</span> source <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>templateRef 的实现也很有意思，它的用法是不需要返回ref，直接绑定dom</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">template>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> templateRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@vueuse/core'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token function\">templateRef</span><span class=\"token punctuation\">(</span><span class=\"token string\">'target'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// no need to return the `target`, it will bind to the ref magically</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Shorthand for binding ref to template element.\n *\n * @link https://vueuse.org/templateRef\n * @param key\n * @param initialValue\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">templateRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> Element <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>\n  key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n  initialValue<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Readonly<span class=\"token operator\">&lt;</span>Ref<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">_trigger</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token function\">customRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">,</span> trigger<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    _trigger <span class=\"token operator\">=</span> trigger\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">track</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> instance<span class=\"token operator\">?.</span>proxy<span class=\"token operator\">?.</span>$refs<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> initialValue\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span>_trigger<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">onUpdated</span><span class=\"token punctuation\">(</span>_trigger<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> element <span class=\"token keyword\">as</span> Readonly<span class=\"token operator\">&lt;</span>Ref<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>利用自定义Ref在 get的时候返回instance的 ref，然后在 渲染完成之后手动调用 trigger 触发更新，依赖于这个ref的变量将会重新取值。</p>","frontmatter":{"title":"Vue Composition Api中常见的几种模式","date":"June 22, 2021","description":"写composition api的常用套路"}},"previous":{"fields":{"slug":"/rethink-vue-composition/"},"frontmatter":{"title":"Rethink vue composition api"}},"next":{"fields":{"slug":"/get-width-of-element/"},"frontmatter":{"title":"动态获取元素的宽度"}}},"pageContext":{"id":"2f028ecb-d072-5f78-ac51-e547e6dc3190","previousPostId":"79ca5199-ef96-5240-95b5-308984ad1f80","nextPostId":"ed4e66ba-92d0-5f27-ada8-daad90e65018"}},"staticQueryHashes":["2841359383","965855181"]}