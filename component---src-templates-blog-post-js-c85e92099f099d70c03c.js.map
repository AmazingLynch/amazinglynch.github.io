{"version":3,"file":"component---src-templates-blog-post-js-c85e92099f099d70c03c.js","mappings":"kNA0DA,EA9CgB,SAAC,GAAyB,IAAD,EACjCA,ECbO,WACb,IACIC,EADAC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAGnF,GAAID,EAAQD,QACVA,EAAUC,EAAQD,YACb,KAAIC,EAAQI,OAAQJ,EAAQK,KAGjC,MAAM,IAAIC,MAAM,yFAFhBP,EAAU,sBAAsBQ,OAAOP,EAAQI,KAAM,KAAKG,OAAOP,EAAQK,KAG3E,CAKA,IAHA,IAAIG,EAAM,IAAIC,IAAI,GAAGF,OAAOR,EAAS,gBAG5BW,EAAK,EAAGC,EAFL,CAAC,OAAQ,QAAS,SAAU,WAAY,YAAa,WAAY,YAE5CD,EAAKC,EAAOT,OAAQQ,IAAM,CACzD,IAAIE,EAAOD,EAAOD,GACdG,EAAQb,EAAQY,GAEpB,QAAcT,IAAVU,EAAJ,CAIA,GAAa,WAATD,GAA8B,aAATA,EAAqB,CAC5C,IAAKE,MAAMC,QAAQF,GACjB,MAAM,IAAIG,UAAU,QAAQT,OAAOK,EAAM,gCAG3CC,EAAQA,EAAMI,KAAK,IACrB,CAEAT,EAAIU,aAAaC,IAAIP,EAAMC,EAV3B,CAWF,CAEA,OAAOL,EAAIY,UACb,CDtBqBC,CAAkB,CACnCjB,KAAM,SACNC,KAAM,mBACNiB,KAAK,oBAJgC,EAAtBC,MAIX,KAJiC,EAAfC,SAIuBC,KAAzC,oDAiBAC,EAAM,WAdCC,EAAAA,EAAAA,gBAAe,aAcRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,sBAUA,uCACa,8BAASZ,EAAOa,MAD7B,KAC6Cb,aAAA,EAAAA,EAAQc,UAAW,KADhE,IAGE,qBAAGf,KAAM3B,EAAY2C,OAAO,SAASC,IAAI,cAAzC,8BAMP,E,mBEUD,EA3DyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMnB,EAAe,EAAfA,SAC1BoB,EAAOD,EAAKE,eACZC,GAAY,UAAAH,EAAKf,KAAKC,oBAAV,eAAwBN,QAAxB,QACVwB,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KAElB,OACE,gBAAC,IAAD,CAAQxB,SAAUA,EAAUD,MAAOuB,GACjC,gBAAC,IAAD,CACEvB,MAAOqB,EAAKK,YAAY1B,MACxB2B,YAAaN,EAAKK,YAAYC,aAAeN,EAAKO,UAEpD,2BACErB,UAAU,YACVsB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYV,EAAKK,YAAY1B,OAC1C,yBAAIqB,EAAKK,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQb,EAAKc,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,EAAD,CAAS/B,MAAOqB,EAAKK,YAAY1B,MAAOC,SAAUA,MAGtD,uBAAKM,UAAU,iBACb,sBACE6B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjB,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAASoB,OAAOC,KAAM1B,IAAI,QAApC,KACKK,EAASE,YAAY1B,QAI9B,0BACGyB,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAAKmB,OAAOC,KAAM1B,IAAI,QAC7BM,EAAKC,YAAY1B,MADpB,SASb,C","sources":["webpack://gatsby-starter-blog/./src/components/postBio.js","webpack://gatsby-starter-blog/./node_modules/new-github-issue-url/index.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * PostBio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport newGithubIssueUrl from \"new-github-issue-url\";\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst PostBio = ({ title, location }) => {\n  const commentUrl = newGithubIssueUrl({\n    user: 'colgin',\n    repo: 'colgin.github.io',\n    body: `## context \\n\\n [${title}](${location.href}) \\n\\n ## description \\n\\n write something here`\n  });\n\n  const data = useStaticQuery(graphql`\n    query PostBioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/avatar.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      <p>\n        Written by <strong>{author.name}</strong> {author?.summary || null}\n        {` `}\n        <a href={commentUrl} target=\"_blank\" rel=\"noreferrer\">\n          You can comment on github\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default PostBio\n","export default function newGithubIssueUrl() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var repoUrl;\n\n  if (options.repoUrl) {\n    repoUrl = options.repoUrl;\n  } else if (options.user && options.repo) {\n    repoUrl = \"https://github.com/\".concat(options.user, \"/\").concat(options.repo);\n  } else {\n    throw new Error('You need to specify either the `repoUrl` option or both the `user` and `repo` options');\n  }\n\n  var url = new URL(\"\".concat(repoUrl, \"/issues/new\"));\n  var types = ['body', 'title', 'labels', 'template', 'milestone', 'assignee', 'projects'];\n\n  for (var _i = 0, _types = types; _i < _types.length; _i++) {\n    var type = _types[_i];\n    var value = options[type];\n\n    if (value === undefined) {\n      continue;\n    }\n\n    if (type === 'labels' || type === 'projects') {\n      if (!Array.isArray(value)) {\n        throw new TypeError(\"The `\".concat(type, \"` option should be an array\"));\n      }\n\n      value = value.join(',');\n    }\n\n    url.searchParams.set(type, value);\n  }\n\n  return url.toString();\n}","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport PostBio from \"../components/postBio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <PostBio title={post.frontmatter.title} location={location} />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["commentUrl","repoUrl","options","arguments","length","undefined","user","repo","Error","concat","url","URL","_i","_types","type","value","Array","isArray","TypeError","join","searchParams","set","toString","newGithubIssueUrl","body","title","location","href","author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","summary","target","rel","data","post","markdownRemark","siteTitle","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug"],"sourceRoot":""}